name: powerpc/qemu-boot

# Controls when the action will run.
on:
  # This allows the build to be triggered manually via the github UI.
  workflow_dispatch:

  push:
    # This triggers the build on a push to any branch
    branches:
    - '**'
    # As long as one of these paths matches
    paths:
      - '!tools/**'		   	# ignore tools
      - '!samples/**'		   	# ignore samples
      - '!Documentation/**'		# ignore Documentation
      - '!arch/**'			# ignore arch changes
      - 'arch/powerpc/**'		# but not arch/powerpc
      - 'arch/Kconfig'			# or common bits in arch
      - '**'				# anything else triggers a build

jobs:
  kernel:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - subarch: ppc64le
            defconfig: ppc64le_guest_defconfig
            image: fedora-32
          - subarch: ppc
            defconfig: ppc44x_defconfig
            image: fedora-32
          - subarch: ppc64
            defconfig: corenet64_smp_defconfig
            image: fedora-32
            merge_config: /linux/arch/powerpc/configs/ppc64e-qemu.config
          - subarch: ppc64
            defconfig: g5_defconfig
            image: fedora-32
            merge_config: /linux/arch/powerpc/configs/g5-qemu.config
          - subarch: ppc
            defconfig: pmac32_defconfig
            image: fedora-32
            merge_config: /linux/arch/powerpc/configs/pmac32-qemu.config

    env:
      ARCH: powerpc
      TARGET: kernel
      SUBARCH: ${{ matrix.subarch }}
      IMAGE: ${{ matrix.image }}
      DEFCONFIG: ${{ matrix.defconfig }}
      MERGE_CONFIG: ${{ matrix.merge_config }}

    steps:
    - uses: actions/checkout@v2

    - name: Register gcc problem matcher
      run: echo "::add-matcher::.github/problem-matchers/gcc.json"

    - name: build
      run: ./arch/powerpc/tools/ci-build.sh

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.defconfig }}-${{ matrix.image }}
        path: |
          ~/output/vmlinux
          ~/output/.config
          ~/output/System.map
          ~/output/modules.tar.bz2
          ~/output/arch/powerpc/boot/zImage
          ~/output/arch/powerpc/boot/uImage
          ~/output/include/config/kernel.release

  boot:
    runs-on: ubuntu-latest
    needs: kernel

    strategy:
      matrix:
        include:
          - defconfig: ppc64le_guest_defconfig
            image: fedora-32
            machine: pseries+p8+tcg
            packages: qemu-system-ppc64
            rootfs: ppc64le-rootfs.cpio.gz

          - defconfig: ppc64le_guest_defconfig
            image: fedora-32
            machine: pseries+p9+tcg
            packages: qemu-system-ppc64
            rootfs: ppc64le-rootfs.cpio.gz

          - defconfig: ppc44x_defconfig
            image: fedora-32
            machine: 44x
            packages: qemu-system-ppc
            rootfs: ppc-rootfs.cpio.gz

          - defconfig: corenet64_smp_defconfig
            image: fedora-32
            machine: ppc64e
            packages: qemu-system-ppc64
            rootfs: ppc64-novsx-rootfs.cpio.gz

          - defconfig: corenet64_smp_defconfig
            image: fedora-32
            machine: ppc64e+compat
            packages: qemu-system-ppc64
            rootfs: ppc-rootfs.cpio.gz

          - defconfig: g5_defconfig
            image: fedora-32
            machine: g5
            packages: qemu-system-ppc64 openbios-ppc
            rootfs: ppc64-rootfs.cpio.gz

          - defconfig: pmac32_defconfig
            image: fedora-32
            machine: mac99
            packages: qemu-system-ppc openbios-ppc
            rootfs: ppc-rootfs.cpio.gz

    steps:
    - uses: actions/checkout@v2
      with:
        repository: linuxppc/ci-scripts

    - name: Download root disk
      run: make -C root-disks ${{ matrix.rootfs }}

    - name: Set root disk path
      run: echo "ROOT_DISK_PATH=$PWD/root-disks" >> $GITHUB_ENV

    - name: Install dependencies
      run: sudo apt install -y ${{ matrix.packages }} python3-pexpect python3-termcolor python3-yaml

    - uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.defconfig }}-${{ matrix.image }}

    - name: Run qemu
      run: ./scripts/boot/qemu-${{ matrix.machine }}
