name: powerpc/ppctests

# Controls when the action will run.
on:
  # This allows the build to be triggered manually via the github UI.
  workflow_dispatch:

jobs:
  ppctests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image: [ubuntu-22.04]
        subarch: [ppc64, ppc64le]

    env:
      ARCH: powerpc
      TARGET: ppctests
      CCACHE: 1
      INSTALL: 1
      VERBOSE: 1
      SUBARCH: ${{ matrix.subarch }}
      IMAGE: ${{ matrix.image }}

    steps:
    - uses: actions/checkout@v4

    - name: Register problem matchers
      run: |
        echo "::add-matcher::.github/problem-matchers/compiler-source.json"
        echo "::add-matcher::.github/problem-matchers/compiler-non-source.json"

    - name: Load ccache
      uses: actions/cache@v4
      with:
        path: ~/.ccache
        key: ${{ matrix.image }}-${{ matrix.subarch }}-${{ matrix.defconfig }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Fetch linux-next
      run: |
        git fetch https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git

    - name: Checkout linux-next
      run: |
        git checkout FETCH_HEAD
        git log -1
        git cat-file -p HEAD@{1}:arch/powerpc/tools/ci-build.sh > arch/powerpc/tools/ci-build.sh
        chmod u+rwx arch/powerpc/tools/ci-build.sh

    - name: Build
      run: |
        mkdir -p ~/.ccache
        ./arch/powerpc/tools/ci-build.sh

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.subarch }}-${{ matrix.image }}
        path: |
          ~/output/install
